version: 0.2
phases:
    install:
        commands:
            - whoami
            - apt-get update
            - apt-get install -y ca-certificates curl
            - install -m 0755 -d /etc/apt/keyrings
            - curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
            - chmod a+r /etc/apt/keyrings/docker.asc
            - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
            - apt-get update
            - apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            - sed -i 's/ulimit -Hn 524288/ulimit -n 524288/g' /etc/init.d/docker
            - cat /etc/init.d/docker
            - service docker start
            
    pre_build:
        commands:
            - echo Logging in to Amazon ECR...
            - aws --version
            - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 730335196817.dkr.ecr.us-east-1.amazonaws.com
            - REPOSITORY_URI=730335196817.dkr.ecr.us-east-1.amazonaws.com/rubin-portfolio
            - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
            - IMAGE_TAG=${COMMIT_HASH:=latest}
            - CLUSTER_NAME=blazorserverapp
            - SERVICE_NAME=blazorserverapp
    build:
        commands:
            - echo Build started on `date`
            - echo Building the Docker image...          
            - DOCKER_BUILDKIT=0 docker build -t $REPOSITORY_URI:latest .
            - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
    post_build:
        commands:
            - echo Build completed on `date`
            - echo Pushing the Docker images...
            - docker push $REPOSITORY_URI:latest
            - docker push $REPOSITORY_URI:$IMAGE_TAG
            - echo Writing image definitions file...
            - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region us-east-1